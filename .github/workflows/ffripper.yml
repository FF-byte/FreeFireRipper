name: FREE FIRE RIPPER

on:
  workflow_dispatch:
    inputs:
      code:
        description: Paste Chrome Remote Desktop Code
        required: true

jobs:
  build:
    name: Free Fire Ripper Lab Running
    runs-on: windows-latest
    timeout-minutes: 43800

    steps:
    - name: Disable Firewall Profiles
      run: |
        try {
          Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False
        } catch {
          Write-Host "Failed to disable firewall. Continuing..."
        }

    - name: Check and Use Existing Chrome Installation
      id: check_chrome
      run: |
        $chromePath = "C:\Program Files (x86)\Google\Chrome\Application\chrome.exe"
        if (Test-Path $chromePath) {
            Write-Host "Existing Chrome installation found at $chromePath. Using this installation."
            exit 0
        } else {
            Write-Host "No existing Chrome installation found. Installation will proceed."
            exit 1
        }

    - name: Install Necessary Packages (if Chrome not found)
      if: steps.check_chrome.outcome == 'failure'
      run: |
        function Install-PackageWithRetry {
            param ([string]$packageName)
            $maxRetries = 3
            $retryCount = 0
            while ($retryCount -lt $maxRetries) {
                try {
                    choco install $packageName -y --ignore-checksums --install-arguments="'/l*v c:\GoogleChrome_msi_install.log'"
                    return
                } catch {
                    Write-Host "Retrying $packageName install ($($retryCount+1)/$maxRetries)"
                    Start-Sleep -Seconds 10
                    $retryCount++
                }
            }
            throw "$packageName failed to install via Chocolatey after multiple attempts."
        }
        Install-PackageWithRetry -packageName "chrome-remote-desktop-host"
        Install-PackageWithRetry -packageName "googlechrome"

    - name: Start Chrome Remote Desktop
      run: |
        function Start-RemoteDesktop {
          $paths = @("${Env:PROGRAMFILES(X86)}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe", "${Env:PROGRAMFILES}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe")
          foreach ($path in $paths) {
              if (Test-Path $path) {
                  Write-Host "Found executable at: $path"
                  & $path --code="${{ inputs.code }}" --redirect-url="https://remotedesktop.google.com/_/oauthredirect" --pin=123456
                  Write-Host "Chrome Remote Desktop started successfully."
                  return
              }
          }
          Write-Host "Chrome Remote Desktop executable not found."
          exit 1
        }
        Start-RemoteDesktop

    - name: Keep Connection Active
      run: |
        $counter = 43800
        do {
            Write-Host "Keeping the connection alive... Remaining time: $counter minutes"
            Start-Sleep -Seconds 60
            $counter--
        } while ($counter -gt 0)
