name: FREE FIRE RIPPER

on:
  workflow_dispatch:
    inputs:
      code:
        description: Paste Chrome Remote Desktop Code
        required: true

jobs:
  build:
    name: Free Fire Ripper Lab Running
    runs-on: windows-latest
    timeout-minutes: 43800

    steps:
    - name: Disable Firewall Profiles
      run: |
        try {
          Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False
        } catch {
          Write-Host "Failed to disable firewall. Continuing..."
        }

    - name: Reboot Check
      run: |
        $pendingReboot = Get-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Component Based Servicing\RebootPending" -ErrorAction SilentlyContinue
        if ($pendingReboot) {
            Write-Host "Reboot is pending. Exiting to allow reboot."
            exit 1
        } else {
            Write-Host "No reboot pending. Continuing..."
        }

    - name: Kill Chrome Processes
      run: |
        Stop-Process -Name "chrome" -Force -ErrorAction SilentlyContinue

    - name: Check and Install Google Chrome
      run: |
        $chromePath = "C:\Program Files (x86)\Google\Chrome\Application\chrome.exe"
        if (Test-Path $chromePath) {
            Write-Host "Google Chrome is already installed. Skipping installation."
        } else {
            Write-Host "Google Chrome not found. Installing Google Chrome..."
            try {
                $url = "https://dl.google.com/tag/s/appguid%3D%7B8A69D345-D564-463C-AFF1-A69D9E530F96%7D&iid%3D%7B3E36F08D-4E9F-84CD-E5D5-A434731B86BC%7D&lang%3Den&browser%3D4&usagestats%3D0&appname%3DGoogle%20Chrome&needsadmin%3Dtrue/edgedl/chrome/install/GoogleChromeStandaloneEnterprise64.msi"
                $output = "C:\Temp\GoogleChrome.msi"
                New-Item -ItemType Directory -Force -Path "C:\Temp" | Out-Null
                Invoke-WebRequest -Uri $url -OutFile $output
                Start-Process -FilePath "msiexec.exe" -ArgumentList "/i $output /quiet /norestart" -Wait
                Write-Host "Google Chrome installed successfully."
            } catch {
                Write-Host "Google Chrome installation failed. Exiting."
                exit 1
            }
        }

    - name: Check and Install Chrome Remote Desktop Host
      run: |
        $crdPath = "C:\Program Files (x86)\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe"
        if (Test-Path $crdPath) {
            Write-Host "Chrome Remote Desktop Host is already installed. Skipping installation."
        } else {
            Write-Host "Installing Chrome Remote Desktop Host..."
            try {
                choco install chrome-remote-desktop-host -y --ignore-checksums --install-arguments="'/l*v c:\CRDInstall.log'"
                if ($LASTEXITCODE -ne 0) {
                    throw "Chrome Remote Desktop Host installation failed with exit code $LASTEXITCODE."
                }
                Write-Host "Chrome Remote Desktop Host installed successfully."
            } catch {
                Write-Host "Chrome Remote Desktop Host installation failed. Exiting."
                exit 1
            }
        }

    - name: Start Chrome Remote Desktop
      run: |
        $authCode = "${{ inputs.code }}"
        $pin = "123456"  # Use a secure PIN here.
        $redirectUrl = "https://remotedesktop.google.com/_/oauthredirect"
        if (-not $authCode) {
            Write-Host "Authentication code is missing. Please provide a valid code."
            exit 1
        }
        $crdPath1 = "${Env:PROGRAMFILES(X86)}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe"
        $crdPath2 = "${Env:PROGRAMFILES}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe"
        $paths = @($crdPath1, $crdPath2)
        foreach ($path in $paths) {
            if (Test-Path $path) {
                Write-Host "Found executable at: $path"
                Write-Host "Running: $path --code=$authCode --redirect-url=$redirectUrl --pin=$pin"
                & $path --code=$authCode --redirect-url=$redirectUrl --pin=$pin
                if ($LASTEXITCODE -eq 0) {
                    Write-Host "Chrome Remote Desktop started successfully."
                    exit 0
                } else {
                    Write-Host "Failed to start Chrome Remote Desktop. Exit code: $LASTEXITCODE"
                }
            }
        }
        Write-Host "Chrome Remote Desktop executable not found. Exiting."
        exit 1

    - name: Keep Connection Active
      run: |
        $counter = 43800
        do {
            Write-Host "Keeping the connection alive... Remaining time: $counter minutes"
            Start-Sleep -Seconds 60
            $counter--
        } while ($counter -gt 0)
