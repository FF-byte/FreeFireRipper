name: FREE FIRE RIPPER

on:
  workflow_dispatch:
    inputs:
      code:
        description: Paste Chrome Remote Desktop Code
        required: true

jobs:
  build:
    name: Free Fire Ripper Lab Running
    runs-on: windows-latest
    timeout-minutes: 43800

    steps:
    - name: Disable Firewall Profiles
      run: |
        try {
          Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False
        } catch {
          Write-Host "Failed to disable firewall. Continuing..."
        }

    - name: Backup Existing Chrome Installation
      run: |
        $chromePath = "C:\Program Files (x86)\Google\Chrome"
        $backupPath = "C:\ChromeBackup"
        if (Test-Path $chromePath) {
            try {
                Write-Host "Backing up existing Chrome installation..."
                Copy-Item -Recurse -Force -Path $chromePath -Destination $backupPath
                Write-Host "Backup completed at $backupPath."
            } catch {
                Write-Host "Failed to back up Chrome. Error: $_"
            }
        } else {
            Write-Host "Chrome is not installed. Skipping backup."
        }

    - name: Install Necessary Packages
      run: |
        function Install-PackageWithRetry {
            param ([string]$packageName)
            $maxRetries = 3
            $retryCount = 0
            while ($retryCount -lt $maxRetries) {
                try {
                    choco install $packageName -y --ignore-checksums
                    return
                } catch {
                    Write-Host "Retrying $packageName install ($($retryCount+1)/$maxRetries)"
                    Start-Sleep -Seconds 10
                    $retryCount++
                }
            }
            throw "$packageName failed to install via Chocolatey after multiple attempts."
        }
        Install-PackageWithRetry -packageName "chrome-remote-desktop-host"
        Install-PackageWithRetry -packageName "googlechrome"

    - name: Download and Extract Free Fire Ripper
      continue-on-error: true
      run: |
        cd C:\Users\$Env:USERNAME\Documents
        try {
          Invoke-WebRequest -Uri "https://drive.usercontent.google.com/download?id=11EUFz6hufNT1g56-CmOJw9_KxMERZxhe&export=download" -OutFile ffripper.zip
          7z x ffripper.zip -y
        } catch {
          Write-Host "Download or extraction failed."
          exit 1
        }

    - name: Start Chrome Remote Desktop
      run: |
        function Start-RemoteDesktop {
          param (
              [string]$code = "${{ inputs.code }}",
              [string]$pin = "123456"
          )
          $paths = @("${Env:PROGRAMFILES(X86)}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe", "${Env:PROGRAMFILES}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe")
          foreach ($path in $paths) {
              if (Test-Path $path) {
                  Write-Host "Starting Chrome Remote Desktop..."
                  & $path --code=$code --redirect-url="https://remotedesktop.google.com/_/oauthredirect" --name=$Env:COMPUTERNAME --pin=$pin
                  Write-Host "Chrome Remote Desktop started successfully."
                  return
              }
          }
          Write-Host "Chrome Remote Desktop executable not found."
          exit 1
        }
        Start-RemoteDesktop

    - name: Create Symbolic Links
      run: |
        New-Item -ItemType SymbolicLink -Target "C:\Users\$Env:USERNAME\Documents\FenixGaga\Engine\ProjectTitan.exe" -Path "C:\Users\$Env:USERNAME\Desktop\Free Fire.lnk"
        New-Item -ItemType SymbolicLink -Target "C:\Users\$Env:USERNAME\Documents\ninjaripper\x86\NinjaRipper.exe" -Path "C:\Users\$Env:USERNAME\Desktop\Ninjaripper.lnk"
        New-Item -ItemType SymbolicLink -Target "C:\Users\$Env:USERNAME\Documents\noesis\Noesis64.exe" -Path "C:\Users\$Env:USERNAME\Desktop\Noesis.lnk"

    - name: Keep Connection Active
      run: |
        $i = 43800
        do {
            Write-Host $i
            Start-Sleep 60
            $i--
        } while ($i -gt 0)
