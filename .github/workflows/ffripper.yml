name: FREE FIRE RIPPER

on:
  workflow_dispatch:
    inputs:
      code:
        description: Paste Chrome Remote Desktop Code
        required: true

jobs:
  build:
    name: Free Fire Ripper Lab Running
    runs-on: windows-latest
    timeout-minutes: 43800  # Allowing long runtime for RDP and other tasks

    steps:
    - name: Disable Firewall Profiles
      run: |
        try {
          Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False
        } catch {
          Write-Host "Failed to disable firewall. Continuing..."
        }

    - name: Remove Previous Chrome Installations
      run: |
        $chromePath = "C:\Program Files (x86)\Google\Chrome"
        if (Test-Path $chromePath) {
            Remove-Item -Recurse -Force $chromePath
            Write-Host "Removed previous Chrome installation."
        }

    - name: Reboot System if Needed
      run: |
        shutdown.exe /r /f /t 0

    - name: Install Google Chrome with Retry
      run: |
        function Install-ChromeWithRetry {
          param (
            [string]$packageName
          )
          $maxRetries = 5
          $retryCount = 0
          $installSuccess = $false
          
          while ($retryCount -lt $maxRetries -and !$installSuccess) {
              try {
                  choco install $packageName -y --install-arguments "'/l*v C:\GoogleChrome_msi_install.log'"
                  $installSuccess = $true
                  Write-Host "$packageName installation succeeded."
              } catch {
                  Write-Host "Retrying $packageName installation ($($retryCount+1)/$maxRetries)."
                  $retryCount++
                  Start-Sleep -Seconds 30
              }
          }

          if (!$installSuccess) {
              throw "$packageName installation failed after $maxRetries retries."
          }
        }

        Install-ChromeWithRetry -packageName "googlechrome"

    - name: Install Chrome Remote Desktop Host with Retry
      run: |
        function Install-CRDWithRetry {
          param (
            [string]$packageName
          )
          $maxRetries = 5
          $retryCount = 0
          $installSuccess = $false
          
          while ($retryCount -lt $maxRetries -and !$installSuccess) {
              try {
                  choco install $packageName -y --install-arguments "'/l*v C:\ChromeRemoteDesktop_msi_install.log'"
                  $installSuccess = $true
                  Write-Host "$packageName installation succeeded."
              } catch {
                  Write-Host "Retrying $packageName installation ($($retryCount+1)/$maxRetries)."
                  $retryCount++
                  Start-Sleep -Seconds 30
              }
          }

          if (!$installSuccess) {
              throw "$packageName installation failed after $maxRetries retries."
          }
        }

        Install-CRDWithRetry -packageName "chrome-remote-desktop-host"

    - name: Download and Extract Free Fire Ripper
      continue-on-error: true
      run: |
        cd C:\Users\$Env:USERNAME\Documents
        try {
          Invoke-WebRequest -Uri "https://drive.usercontent.google.com/download?id=11EUFz6hufNT1g56-CmOJw9_KxMERZxhe&export=download" -OutFile ffripper.zip
          7z x ffripper.zip -y
        } catch {
          Write-Host "Download or extraction failed."
          exit 1
        }

    - name: Start Chrome Remote Desktop
      continue-on-error: true
      run: |
        function Start-RemoteDesktop {
          $paths = @("${Env:PROGRAMFILES(X86)}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe", "${Env:PROGRAMFILES}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe")
          foreach ($path in $paths) {
              if (Test-Path $path) { 
                  Write-Host "Starting Chrome Remote Desktop..."
                  & $path --code="${{ inputs.code }}" --redirect-url="https://remotedesktop.google.com/_/oauthredirect" --name=$Env:COMPUTERNAME --pin=123456
                  Write-Host "Chrome Remote Desktop started."
                  return
              }
          }
          Write-Host "Chrome Remote Desktop's remoting_start_host.exe not found."
        }
        Start-RemoteDesktop

    - name: Create Symbolic Links for Ripper Tools
      run: |
        New-Item -ItemType SymbolicLink -Target "C:\Users\$Env:USERNAME\Documents\FenixGaga\Engine\ProjectTitan.exe" -Path "C:\Users\$Env:USERNAME\Desktop\Free Fire.lnk"
        New-Item -ItemType SymbolicLink -Target "C:\Users\$Env:USERNAME\Documents\ninjaripper\x86\NinjaRipper.exe" -Path "C:\Users\$Env:USERNAME\Desktop\Ninjaripper.lnk"
        New-Item -ItemType SymbolicLink -Target "C:\Users\$Env:USERNAME\Documents\noesis\Noesis64.exe" -Path "C:\Users\$Env:USERNAME\Desktop\Noesis.lnk"

    - name: Start Remote Desktop Session
      continue-on-error: true
      run: |
        Write-Host "Connecting to VM with Remote Desktop"
        & "${Env:PROGRAMFILES(X86)}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe" --code="${{ inputs.code }}" --redirect-url="https://remotedesktop.google.com/_/oauthredirect" --name=$Env:COMPUTERNAME --pin=123456

    - name: Keep Connection Active
      run: |
        $i = 43800
        do {
            Write-Host "Keeping RDP connection active for $i seconds."
            Start-Sleep 60
            $i--
        } while ($i -gt 0)
