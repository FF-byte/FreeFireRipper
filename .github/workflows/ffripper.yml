name: SATURN LK

on:
  workflow_dispatch:
    inputs:
      code:
        description: Paste Chrome Remote Desktop Code
        required: true

jobs:
  build:
    name: Free Fire Ripper Lab Running
    runs-on: windows-latest
    timeout-minutes: 43800

    steps:
    - name: Disable Firewall Profiles
      run: |
        try {
          Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False
        } catch {
          Write-Host "Failed to disable firewall. Continuing..."
        }

    - name: Check for Pending Reboots
      run: |
        function Test-PendingReboot {
          $rebootRequired = (Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Component Based Servicing\RebootPending") -or
                            (Test-Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate\Auto Update\RebootRequired") -or
                            (Test-Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\PendingFileRenameOperations")
          if ($rebootRequired) {
            Write-Host "A reboot is required. Rebooting system."
            Restart-Computer -Force
          } else {
            Write-Host "No pending reboot detected."
          }
        }
        Test-PendingReboot

    - name: Force Uninstall Google Chrome (if any)
      run: |
        try {
            choco uninstall googlechrome -y
            Write-Host "Uninstalled any existing Google Chrome."
        } catch {
            Write-Host "Google Chrome was not found or already uninstalled."
        }

    - name: Install Google Chrome
      run: |
        # Clear any residual files before installing
        Remove-Item -Path "C:\Users\runneradmin\AppData\Local\Temp\chocolatey\GoogleChrome*" -Force -Recurse
        choco install googlechrome --force -y --ignore-checksums

    - name: Install Necessary Packages
      run: |
        function Install-PackageWithRetry {
            param ([string]$packageName)
            $maxRetries = 3
            $retryCount = 0
            while ($retryCount -lt $maxRetries) {
                try {
                    if (choco list --local-only | Select-String $packageName) {
                        Write-Host "$packageName is already installed. Skipping..."
                        return
                    }
                    choco install $packageName -y --ignore-checksums
                    Write-Host "$packageName installed successfully."
                    return
                } catch {
                    Write-Host "Retrying $packageName install ($($retryCount+1)/$maxRetries)"
                    Start-Sleep -Seconds 10
                    $retryCount++
                }
            }
            throw "$packageName failed to install via Chocolatey after multiple attempts."
        }
        Install-PackageWithRetry -packageName "chrome-remote-desktop-host"

    - name: Check if Google Chrome is Installed
      run: |
        if (choco list --local-only | Select-String 'googlechrome') {
          Write-Host "Google Chrome is already installed. Skipping installation."
        } else {
          Write-Host "Google Chrome not found. Installing..."
          choco install googlechrome --force -y --ignore-checksums
        }

    - name: Download and Extract Free Fire Ripper
      continue-on-error: true
      run: |
        cd C:\Users\$Env:USERNAME\Documents
        try {
          Invoke-WebRequest -Uri "https://drive.usercontent.google.com/download?id=11EUFz6hufNT1g56-CmOJw9_KxMERZxhe&export=download" -OutFile ffripper.zip
          7z x ffripper.zip -y
        } catch {
          Write-Host "Download or extraction failed."
          exit 1
        }

    - name: Start Chrome Remote Desktop
      continue-on-error: true
      run: |
        function Start-RemoteDesktop {
          $paths = @("${Env:PROGRAMFILES(X86)}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe", "${Env:PROGRAMFILES}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe")
          foreach ($path in $paths) {
              if (Test-Path $path) { & $path; return }
          }
          Write-Host "Chrome Remote Desktop's remoting_start_host.exe not found."
        }
        Start-RemoteDesktop

    - name: Create Symbolic Links
      run: |
        New-Item -ItemType SymbolicLink -Target "C:\Users\$Env:USERNAME\Documents\FenixGaga\Engine\ProjectTitan.exe" -Path "C:\Users\$Env:USERNAME\Desktop\Free Fire.lnk"
        New-Item -ItemType SymbolicLink -Target "C:\Users\$Env:USERNAME\Documents\ninjaripper\x86\NinjaRipper.exe" -Path "C:\Users\$Env:USERNAME\Desktop\Ninjaripper.lnk"
        New-Item -ItemType SymbolicLink -Target "C:\Users\$Env:USERNAME\Documents\noesis\Noesis64.exe" -Path "C:\Users\$Env:USERNAME\Desktop\Noesis.lnk"

    - name: Start Remote Desktop Session
      continue-on-error: true
      run: |
        Write-Host "Connecting to VM with Remote Desktop"
        ${{ inputs.code }} --pin=123456

    - name: Keep Connection Active
      run: |
        $i = 43800
        do {
            Write-Host $i
            Start-Sleep 60
            $i--
        } while ($i -gt 0)

    - name: Count Installation Attempts
      run: |
        $counterPath = "C:\GoogleChromeInstallCounter.txt"
        if (Test-Path $counterPath) {
          $counter = Get-Content $counterPath
          $counter = [int]$counter + 1
        } else {
          $counter = 1
        }
        Set-Content -Path $counterPath -Value $counter
        Write-Host "Installation attempt number: $counter"
