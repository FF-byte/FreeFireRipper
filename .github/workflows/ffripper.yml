name: SATURN LK

on:
  workflow_dispatch:
    inputs:
      code:
        description: Enter the remote desktop code
        required: true

jobs:
  build:
    name: Set up RDP
    runs-on: windows-latest
    timeout-minutes: 43800

    steps:
    # Step 1: Disable Firewall Profiles
    - name: Disable Firewall Profiles
      run: |
        try {
          Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False
        } catch {
          Write-Host "Failed to disable firewall. Continuing..."
        }

    # Step 2: Install Chocolatey
    - name: Install Chocolatey
      run: |
        if (-not (Get-Command choco -ErrorAction SilentlyContinue)) {
            Set-ExecutionPolicy Bypass -Scope Process -Force
            [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12
            Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
        }
        # Refresh environment variables
        $env:PATH = [System.Environment]::GetEnvironmentVariable("Path", "Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path", "User")

    # Step 3: Install Chrome Remote Desktop
    - name: Install Chrome Remote Desktop
      run: |
        choco install chrome-remote-desktop-host -y --no-progress

    # Step 4: Start Chrome Remote Desktop
    - name: Start Chrome Remote Desktop
      run: |
        param (
            [string]$authCode = "${{ github.event.inputs.code }}",
            [string]$pin = "123456"
        )

        function Start-RemoteDesktop {
            $remotingExecutablePaths = @(
                "${Env:PROGRAMFILES(X86)}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe",
                "${Env:PROGRAMFILES}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe"
            )
            foreach ($path in $remotingExecutablePaths) {
                if (Test-Path $path) {
                    & $path --code=$authCode --redirect-url="https://remotedesktop.google.com/_/oauthredirect" --pin=$pin
                    Write-Host "Chrome Remote Desktop started successfully."
                    return
                }
            }
            Write-Host "Chrome Remote Desktop executable not found. Exiting."
            exit 1
        }

        Start-RemoteDesktop

    # Step 5: Keep RDP Session Active
    - name: Keep RDP Session Active
      run: |
        $i = 43800
        do {
            Write-Host "Keeping session active. Remaining time: $i minutes."
            Start-Sleep -Seconds 60
            $i--
        } while ($i -gt 0)
